name: Java CI

on:
  push:
    branches:
      - master
      - develop
#    types: closed

#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#      - name: Gradle build
#        run: ./gradlew bootJar -Dversiontag=${{ github.sha }}
#      - name: Upload artifact
#        uses: actions/upload-artifact@v1
#        with:
#          name: restservice-${{ github.sha }}-SNAPSHOT.jar
#          path: build/libs/
#
#  dockerbuild:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Download artifact
#        uses: actions/download-artifact@v1
#        with:
#          name: restservice-${{ github.sha }}-SNAPSHOT.jar
#      - name: Docker login
#        run:
#          docker login -u ${{ secrets.DOCKERHUB_LOGIN }} -p ${{ secrets.DOCKERHUB_PASS }}
#      - name: Run docker builder
#        run: |
#          docker build -t ${{ secrets.DOCKERHUB_LOGIN }}/restservice:latest --build-arg DB_HOST="${{ secrets.MYSQL_HOST }}" --build-arg DB_NAME="${{ secrets.MYSQL_DB }}" --build-arg DB_USER="${{ secrets.MYSQL_USER }}" --build-arg DB_PASS="${{ secrets.MYSQL_PASSWORD }}" --build-arg JAR_NAME="restservice-${{ github.sha }}-SNAPSHOT.jar" .
#      - name: Push image
#        run: |
#          docker push ${{ secrets.DOCKERHUB_LOGIN }}/restservice:latest

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Gradle build
        run: ./gradlew clean build -Dversiontag=v1
      - name: SonarQube scan
        uses: bigstinky86/spring@develop
        with:
          extra_args: >
            -Dsonar.projectKey=restservice
            -Dsonar.scm.provider=git
            -Dsonar.sources=src/main/java/
            -Dsonar.language=java
            -Dsonar.java.binaries=build/classes/**
            -Dsonar.branch.name=${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONARCLOUD_URL: ${{ secrets.SONAR_URL }}
